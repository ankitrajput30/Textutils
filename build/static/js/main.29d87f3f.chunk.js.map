{"version":3,"sources":["components/Navbar.js","components/FormText.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","htmlFor","FormText","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","split","i","length","newText11","newText12","slice","join","charAt","reverse","navigator","clipboard","writeText","showAlert","Alert","alert","word","lower","captitalize","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.29d87f3f.chunk.js","sourcesContent":["import React from 'react'\r\nexport default function Navbar(props) {\r\n     return (\r\n          <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n               <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                         <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                         <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                              <li className=\"nav-item\">\r\n                                   <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                              </li>\r\n                              <li className=\"nav-item\">\r\n                                   <a className=\"nav-link\" href=\"#\">About</a>\r\n                              </li>\r\n                         </ul>\r\n                         {/* <form className=\"d-flex\" role=\"search\">\r\n                              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                         </form> */}\r\n                         <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                              <input className=\"form-check-input text-mode\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                         </div>\r\n                    </div>\r\n               </div>\r\n          </nav>\r\n     );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function FormText(props) {\r\n     const handleUpClick = () => {\r\n          let newText = text.toUpperCase();\r\n          setText(newText);\r\n     };\r\n\r\n     const handleOnChange = (event) => {\r\n          setText(event.target.value);\r\n     };\r\n\r\n     const handleLoClick = () => {\r\n          let newText = text.toLowerCase();\r\n          setText(newText);\r\n     };\r\n\r\n     const handleClearClick = (event) => {\r\n          setText(event.target.value);\r\n     };\r\n\r\n     const handleCaptClick = () => {\r\n          let newText = text.toLowerCase().split(\" \");\r\n          for (let i = 0; i < newText.length; i++) {\r\n               let newText11 = newText[i][0].toUpperCase();\r\n               let newText12 = newText[i].slice(1);\r\n               newText[i] = newText11 + newText12;\r\n          }\r\n          setText(newText.join(\" \"));\r\n     };\r\n\r\n     const handleSentClick = () => {\r\n          let newText = text.charAt(0).toUpperCase() + text.slice(1);\r\n          setText(newText);\r\n     };\r\n\r\n     const handleInvClick = () => {\r\n          let newText = text.split(\"\").reverse().join(\"\");\r\n          setText(newText);\r\n     };\r\n\r\n     const handleCopyClick = () => {\r\n          navigator.clipboard.writeText(text);\r\n          // setText(newText);\r\n          props.showAlert(\"Copied to clipboard!\", \"success\");\r\n     }\r\n\r\n     const [text, setText] = useState('');\r\n     //text = \"new text\"; //Wrong Way to change the state\r\n     //setText(\"new text\"); //Correct Way to change the state\r\n     return (\r\n          <>\r\n               <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                    <h1>{props.heading}</h1>\r\n                    <div className=\"mb-3\">\r\n                         <textarea\r\n                              className=\"form-control\"\r\n                              value={text}\r\n                              onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}}\r\n                              id=\"myBox\"\r\n                              rows=\"8\"\r\n                         ></textarea>\r\n                    </div>\r\n                    <button className=\"btn btn-outline-warning mx-2\" onClick={handleUpClick}>UPPER</button>\r\n                    <button className=\"btn btn-outline-danger\" onClick={handleClearClick}>Clear</button>\r\n                    <button className=\"btn btn-outline-info mx-2\" onClick={handleLoClick}>lower</button>\r\n                    <button className=\"btn btn-outline-primary\" onClick={handleCaptClick}>Captalized</button>\r\n                    <button className=\"btn btn-outline-success mx-2 btnSen\" onClick={handleSentClick}>Sentence</button>\r\n                    <button className=\"btn btn-outline-dark btnInv\" onClick={handleInvClick}>InVeRsE</button>\r\n                    <button className=\"btn btn-outline-secondary mx-2 btnCopy\" onClick={handleCopyClick}>Copy(Clipboard)</button>\r\n               </div>\r\n               <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                    <h1>Preview</h1>\r\n                    <p>{text}</p>\r\n               </div>\r\n               <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                    <h1>Your text Summary</h1>\r\n                    <p>{text.split(\" \").length} words and {text.length} characters.</p>\r\n                    <p>{0.007 * text.split(\" \").length} Minutes you need to Read the whole text.</p>\r\n               </div>\r\n          </>\r\n     );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n     const captitalize = (word) => {\r\n          const lower = word.toLowerCase();\r\n          return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n     }\r\n     return (\r\n\r\n          props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n               <strong>{captitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n               <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default Alert","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport FormText from \"./components/FormText\";\n// import About from \"./components/About\";\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes,\n//   Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //dark mode setter\n  const [alert, setAlert] = useState(null);\n\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Dark mode has been disabled\", \"warning\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      </div>\n      <div className=\"container my-3\">\n        {/* <Routes>\n            <Route exact path=\"/about\" element={<About />}/>\n            <Route exact path=\"/\" element={<FormText showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />}/>\n          </Routes> */}\n        <FormText showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}